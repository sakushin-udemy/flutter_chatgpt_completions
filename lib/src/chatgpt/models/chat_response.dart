import 'chat_message.dart';

/// Represents a response from the ChatGPT API.
///
/// This class is used to store and manipulate data related to a ChatGPT response. It contains
/// information such as the response ID, model used, and choices generated by the model.
class ChatResponse {
  ChatResponse({
    required this.id,
    required this.object,
    required this.created,
    required this.model,
    required this.usage,
    required this.choices,
  });

  final String id;
  final String object;
  final int created;
  final String model;
  final Usage usage;
  final List<Choice> choices;

  /// Constructs a ChatResponse from a JSON object.
  ///
  /// [json] A JSON object containing the required data for creating a ChatResponse instance.
  static ChatResponse fromJson(Map<String, dynamic> json) {
    return ChatResponse(
      id: json['id'],
      object: json['object'],
      created: json['created'],
      model: json['model'],
      usage: Usage.fromJson(json['usage'] as Map<String, dynamic>),
      choices: (json['choices'] as List<dynamic>)
          .map((choiceJson) =>
              Choice.fromJson(choiceJson as Map<String, dynamic>))
          .toList(),
    );
  }
}

/// Represents the usage information for a ChatGPT API response.
///
/// Contains the number of tokens used for the prompt, completion, and the total tokens used.
class Usage {
  Usage({
    required this.promptTokens,
    required this.completionTokens,
    required this.totalTokens,
  });

  final int promptTokens;
  final int completionTokens;
  final int totalTokens;

  /// Constructs a Usage instance from a JSON object.
  ///
  /// [json] A JSON object containing the required data for creating a Usage instance.
  static Usage fromJson(Map<String, dynamic> json) {
    return Usage(
      promptTokens: json['prompt_tokens'],
      completionTokens: json['completion_tokens'],
      totalTokens: json['total_tokens'],
    );
  }
}

/// Represents a choice generated by the ChatGPT API.
///
/// Contains the message, finish reason, and index of the choice.
class Choice {
  Choice({
    required this.message,
    required this.finishReason,
    required this.index,
  });

  final ChatMessage message;
  final String finishReason;
  final int index;

  /// Constructs a Choice instance from a JSON object.
  ///
  /// [json] A JSON object containing the required data for creating a Choice instance.
  static Choice fromJson(Map<String, dynamic> json) {
    return Choice(
      message: ChatMessage.fromJson(json['message'] as Map<String, dynamic>),
      finishReason: json['finish_reason'],
      index: json['index'],
    );
  }
}
